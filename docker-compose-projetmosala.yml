# Docker Compose configuration for Mosala with custom domains

services:
  frontend:
    image: galoycg/mosala-frontend:latest
    container_name: mosala-frontend
    restart: unless-stopped
    networks:
      - mosala-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`projetmosala.org`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  backend-nestjs:
    image: galoycg/mosala-backend:latest
    container_name: mosala-backend-nestjs
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_NAME=mosala
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - PORT=4002
    depends_on:
      - postgres
    networks:
      - mosala-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.projetmosala.org`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=4002"

  strapi:
    image: node:20-alpine
    container_name: mosala-strapi
    restart: unless-stopped
    working_dir: /app
    volumes:
      - strapi_data:/app
    command: sh -c "if [ ! -d 'cms' ]; then npx create-strapi-app@latest cms --quickstart --no-run --dbclient=mysql --dbhost=db --dbport=3306 --dbname=mosala --dbusername=mosala --dbpassword=mosala; fi && cd cms && npm run develop"
    environment:
      - NODE_ENV=development
      - DATABASE_CLIENT=mysql
      - DATABASE_HOST=db
      - DATABASE_PORT=3306
      - DATABASE_NAME=mosala
      - DATABASE_USERNAME=mosala
      - DATABASE_PASSWORD=mosala
    depends_on:
      - db
    networks:
      - mosala-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cms.rule=Host(`admin.projetmosala.org`)"
      - "traefik.http.routers.cms.entrypoints=websecure"
      - "traefik.http.routers.cms.tls.certresolver=letsencrypt"
      - "traefik.http.services.cms.loadbalancer.server.port=1337"

  db:
    image: mysql:8.0
    container_name: mosala-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: mosala
      MYSQL_USER: mosala
      MYSQL_PASSWORD: mosala
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
    volumes:
      - db_data:/var/lib/mysql
      - ./backup:/backup
    networks:
      - mosala-net
    command: --default-authentication-plugin=mysql_native_password

  postgres:
    image: postgres:15
    container_name: mosala-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mosala
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./backup:/backup
    networks:
      - mosala-net

  traefik:
    image: traefik:v2.10
    container_name: mosala-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-projetmosala.yml:/etc/traefik/traefik.yml:ro
      - ./acme.json:/acme.json
    networks:
      - mosala-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.projetmosala.org`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"

volumes:
  db_data:
  pg_data:
  strapi_data:

networks:
  mosala-net:
    driver: bridge
